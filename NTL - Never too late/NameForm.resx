<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FuUYnxbRGJ8WgBmgGCwaoRoNFp4WARyiGwAUnRQAFJ0UAAAAAAAAAAB4AAAAdgAAAHIAAABgAAAAVQAA
        AJsAAADsAAAAwgAAAG0AAAAsAAAAAgAAAAAAAAAcAAAAgwAAALEAAACJAAAATgAAABMaqxgsGJ8Wghie
        FqgYnhazGJ8WxRifFskYnxalGJ4XbRidFy0SlxACGp8YAACGAAAAhgAAAAAAAAAAAJIAAACOAAAAhAAA
        AHUAAABvAAAArAAAAO4AAADCAAAAbgAAAC0AAAACAAAAAAAAABwAAACBAAAArwAAAIcAAABMAAAAEhqo
        FzgYnxaaGJ4WoxieFn8YnxaIGZ8VoRieFrgYnRauGJ0WWBWdFQ4AoAgBIJYgABadFgAAqgAAAAAAnwAA
        AJcAAACJAAAAgQAAAIcAAAC9AAAA8AAAAMIAAABwAAAALgAAAAIAAAAAAAAAHAAAAIIAAACvAAAAhgAA
        AEwAAAASGacXQBifFq4YnhamGJ4WYxmeFVYZnxVrGJ4VphidFsUYnhaGF58XPRefFxQXnxcAF58XAAAA
        AAAAAACjAAAAmAAAAIQAAACHAAAAnQAAAM0AAADzAAAAwgAAAHIAAAAvAAAAAgAAAAAAAAAcAAAAggAA
        AK8AAACGAAAASwAAABEZpxdGGJ8WvBifFqwZnhVUGZ0UKxeeEy4YnhV5GJ4VvRieFrEYnxd/GJ8XMRif
        FwAYnxcAAAAAAAAAAKgAAACYAAAAgAAAAIwAAACzAAAA3AAAAPEAAADAAAAAcwAAADAAAAACAAAAAAAA
        ABwAAACCAAAArwAAAIYAAABKAAAAEhmmF0wYnxbIGJ8WsBmeFUcbnBMSFpwTDBieFU0YnhWXGJ4Wuxif
        F60YnxZaF58TGRefEQYXnxMAAAAArQAAAJoAAAB8AAAAkgAAAMkAAADnAAAA6gAAALoAAAB0AAAAMQAA
        AAIAAAAAAAAAHAAAAIMAAACwAAAAhgAAAEoAAAASGaQXURifFtIYnhaxGZ4UPBydEQwZnhUGGZ4WIRme
        FlQYnhajGJ4WxhieFo8ZnhVMGZ4UGBmeFQAAAACzAAAAnQAAAHwAAACZAAAA2gAAAO0AAADeAAAAsQAA
        AHUAAAAyAAAAAgAAAAAAAAAcAAAAgwAAALAAAACFAAAASwAHABYYpBZWGJ4W2BieFrAZnhQyHZ0NBhqd
        FQMklysDGp0ZIBieFnwYnha8GJ4WsRmeFX8ZnhUyGJwVCAAAALgAAACiAAAAgQAAAKIAAADlAAAA6gAA
        AMoAAAClAAAAdQAAADQAAAACAAAAAAAAABwAAACDAAAAsAAAAIUAAABNCDAEHRmkFl4YnhbbGJ4WrRqd
        FimEWhEAHZsYAROgDAAanBoMGJ0XRRieFoIYnha2GJ4WsRieFWIYnRU0AAAAvQAAAKkAAACLAAAAqwAA
        AOkAAADiAAAAtwAAAJoAAAB2AAAANQAAAAIAAAAAAAAAHAAAAIQAAACwAAAAhAEGAVANSwgmGaQWZRie
        FtsYnhaoGpwYIQ2oCwAhlR8BF5oVABicGAUXmxcUGJ0WQhieFqQYnhbJGJ0VihidFWIAAADCAAAAsgAA
        AJkAAACyAAAA4QAAANUAAACsAAAAlQAAAHcAAAA3AAAAAgAAAAAAAAAcAAAAhAAAALAAAACEAgsBUhBa
        Cy4aoxZrGJ4W2BieFqIanBgdFKMQACmNKwAalxsAFpkYARGMHQIYnBYhGJ4WdRieFqUYnRaSGJ0VgwAA
        AMYAAAC7AAAAqgAAALcAAADRAAAAxQAAAKUAAACTAAAAeAAAADgAAAACAAAAAAAAABwAAACEAAAAsAAA
        AIMDEAJVEWQMNhmjFm8YnhbTGJ4WmxieFxoXnxUALIkwABqYGgAWmRgAH6YPABicFg4ZnRU6GJ0WZBid
        FoIYnRaRAAAAywAAAMUAAAC7AAAAvAAAAMAAAAC1AAAAoAAAAJMAAAB5AAAAOAAAAAIAAAAAAAAAHAAA
        AIQAAACwAAAAgwMVA1gRbA4/GaMWdBieFs0YnhaUGJ4WGBieFgAYnhYAAAAAABmcFQAZnBUAGZwVBRmb
        FRgZnBU1GJ0WWxidFnAAAADQAAAAzwAAAMwAAAC/AAAArgAAAKQAAACdAAAAkwAAAHoAAAA5AAAAAgAA
        AAAAAAAcAAAAhAAAALAAAACDBBsEWxFzEEkYoxd5GJ8WxRieFo0YnhYXGJ4WABieFgAAAAAAGZsVABmb
        FQAZmxUCGpsUCBmcFRMYnRYiGJ0WKgAAANUAAADYAAAA2wAAAMIAAACcAAAAlAAAAJoAAACUAAAAfAAA
        ADoAAAACAAAAAAAAABwAAACFAAAAsAAAAIIFIAVfEnkSVBijF34Ynha8GJ4WhBieFhUYnhYAGJ4WAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2QAAAOEAAADqAAAAxQAAAIoAAACFAAAAlgAA
        AJUAAAB9AAAAOwAAAAIAAAAAAAAAHAAAAIUAAACwAAAAggYmBmMTfhJhGaIXgxieFrEXnRZ5F50WExed
        FgAXnRYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeAAAA6QAAAPUAAADFAAAAdwAA
        AHUAAACTAAAAlgAAAH8AAAA8AAAAAwAAAAAAAAAdAAAAhQAAALAAAACBBysGZxSCE24ZoheJF54WpRed
        Fm0XnRYSF50WABedFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOMAAADuAAAA+wAA
        AL8AAABjAAAAZQAAAJAAAACXAAAAgQAAAD0AAAADAAAAAAAAAB0AAACFAAAAsQAAAIAIMgdtFYYTgBmi
        F5MYnhacF54WYxeeFhAXnhYAF54WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5wAA
        APIAAAD8AAAAtgAAAE8AAABWAAAAjAAAAJgAAACCAAAAPgAAAAMAAAAAAAAAHQAAAIYAAACxAAAAgAg0
        B28VhxOHGaIXlBifFo0YnxZXGJ8WDhifFgAYnxYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADrAAAA9QAAAPwAAACtAAAAPAAAAEgAAACJAAAAmAAAAIMAAAA/AAAAAwAAAAAAAAAdAAAAhgAA
        ALEAAACABy4GaBSDEnEZoxd1GKAWbBifFkIYnxYLGJ8WABifFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAO8AAAD2AAAA+AAAAKMAAAArAAAAOwAAAIYAAACZAAAAhQAAAD8AAAADAAAAAAAA
        AB0AAACGAAAAsgAAAIEEHgRbEXQRShmlGEMYoBdBF58XKBefFwcXnxcAF58XAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA8gAAAPQAAADuAAAAlgAAACAAAAA0AAAAgwAAAJkAAACGAAAAQAAA
        AAMAAAAAAAAAHQAAAIcAAACyAAAAggIQAlENWw0tGrAaHxijGCEXoRcVF6EXAxehFwAXoRcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1AAAA7wAAANwAAACGAAAAHAAAADMAAACCAAAAmAAA
        AIcAAABBAAAAAwAAAAAAAAAdAAAAhwAAALMAAACCAQYBSwg3CBsk+SUIGrcbCxmtGQcZrRkBGa4ZABmu
        GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPcAAADqAAAAyQAAAHYAAAAZAAAAMwAA
        AIEAAACaAAAAiwAAAEYAAAAIAAAAAAAAACIAAACKAAAAtQAAAIUAAABNAQQBGAg3CAIFIAUEBB8EAgQe
        BAAEHgQABB4EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAOgAAAC3AAAAZgAA
        ABYAAAA0AAAAgQAAAJ4AAACUAAAAUgAAABcAAAAKAAAALwAAAJEAAAC6AAAAjAAAAFYAAAAkAAAADQAA
        AAoAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD2AAAA2AAA
        AJ4AAABSAAAAEgAAADUAAACCAAAApgAAAKQAAABuAAAAOgAAAC8AAABOAAAAogAAAMQAAACdAAAAcAAA
        AEcAAAAwAAAAKAAAABYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AMEAAACkAAAAbgAAADUAAAAMAAAANQAAAIQAAAC1AAAAyAAAAKsAAACLAAAAhQAAAJcAAADIAAAA3QAA
        AMUAAACrAAAAkwAAAIMAAAB0AAAARAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAhAAAAGwAAAA/AAAAGQAAAAcAAAA2AAAAhgAAAMQAAADsAAAA6wAAAN8AAADeAAAA4wAA
        APAAAAD2AAAA7wAAAOkAAADiAAAA2QAAAMQAAAB1AAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABoAAAAUgAAACkAAAAMAAAABQAAADcAAACGAAAAygAAAPoAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAA6QAAAI0AAAAXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAQID8AEAA/ABAAPwAQAA8AEAAPABAABwAQAAcAEAAHABAAAQAQ
        AAEAEAAAABACgAAQAoAAEAOAABAD4AAQA+AAEAPgABAD/wAQA/8AEAP/ABAD/wAQA/8AEAP/ABAD/wAQ
        A/8AEAP/ABAH/wAAA/8AAAP/AAAD/wAAA/8AAAP/
</value>
  </data>
</root>